[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-travel-planner"
version = "1.0.0"
description = "AI-powered travel planning agent with multi-service architecture"
authors = [
    {name = "AI Travel Planner Team", email = "team@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi==0.115.6",
    "uvicorn[standard]==0.32.1",
    "pydantic==2.10.3",
    "pydantic-settings==2.7.0",
    "sqlalchemy==2.0.36",
    "alembic==1.14.0",
    "asyncpg==0.30.0",
    "redis==5.2.1",
    "openai==1.61.0",
    "langchain==0.3.12",
    "langchain-openai==0.2.14",
    "chromadb==0.5.23",
    "sentence-transformers==3.3.1",
    "httpx==0.28.1",
    "pandas==2.2.3",
    "numpy==2.2.1",
    "structlog==24.4.0",
    "python-jose[cryptography]==3.3.0",
    "python-dotenv==1.0.1",
    "aiofiles==24.1.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.0",
    "pytest-cov==6.0.0",
    "pytest-mock==3.14.0",
    "black==24.10.0",
    "isort==5.13.2",
    "flake8==7.1.1",
    "mypy==1.14.0",
    "pre-commit==4.0.1",
    "ipython==8.30.0",
]
vllm = [
    "vllm==0.9.1",
    "torch==2.5.1",
    "transformers==4.47.1",
    "accelerate==1.2.1",
    "bitsandbytes==0.45.0",
    "ray==2.40.0",
    "xformers==0.0.28.post3",
]

[project.urls]
Homepage = "https://github.com/example/ai-travel-planner"
Repository = "https://github.com/example/ai-travel-planner.git"
Issues = "https://github.com/example/ai-travel-planner/issues"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_travel_planner"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=ai_travel_planner",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ai_travel_planner"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]